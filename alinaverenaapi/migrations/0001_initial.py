# Generated by Django 4.2.7 on 2024-04-06 23:11

import alinaverenaapi.modelfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('country', alinaverenaapi.modelfields.CountryField(choices=[('BD', 'Bangladesh'), ('BE', 'Belgium'), ('BF', 'Burkina Faso'), ('BG', 'Bulgaria'), ('BA', 'Bosnia and Herzegovina'), ('BB', 'Barbados'), ('WF', 'Wallis and Futuna'), ('BL', 'Saint Barthelemy'), ('BM', 'Bermuda'), ('BN', 'Brunei'), ('BO', 'Bolivia'), ('BH', 'Bahrain'), ('BI', 'Burundi'), ('BJ', 'Benin'), ('BT', 'Bhutan'), ('JM', 'Jamaica'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('WS', 'Samoa'), ('BQ', 'Bonaire, Saint Eustatius and Saba '), ('BR', 'Brazil'), ('BS', 'Bahamas'), ('JE', 'Jersey'), ('BY', 'Belarus'), ('BZ', 'Belize'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('RS', 'Serbia'), ('TL', 'East Timor'), ('RE', 'Reunion'), ('TM', 'Turkmenistan'), ('TJ', 'Tajikistan'), ('RO', 'Romania'), ('TK', 'Tokelau'), ('GW', 'Guinea-Bissau'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GS', 'South Georgia and the South Sandwich Islands'), ('GR', 'Greece'), ('GQ', 'Equatorial Guinea'), ('GP', 'Guadeloupe'), ('JP', 'Japan'), ('GY', 'Guyana'), ('GG', 'Guernsey'), ('GF', 'French Guiana'), ('GE', 'Georgia'), ('GD', 'Grenada'), ('GB', 'United Kingdom'), ('GA', 'Gabon'), ('SV', 'El Salvador'), ('GN', 'Guinea'), ('GM', 'Gambia'), ('GL', 'Greenland'), ('GI', 'Gibraltar'), ('GH', 'Ghana'), ('OM', 'Oman'), ('TN', 'Tunisia'), ('JO', 'Jordan'), ('HR', 'Croatia'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('HK', 'Hong Kong'), ('HN', 'Honduras'), ('HM', 'Heard Island and McDonald Islands'), ('VE', 'Venezuela'), ('PR', 'Puerto Rico'), ('PS', 'Palestinian Territory'), ('PW', 'Palau'), ('PT', 'Portugal'), ('SJ', 'Svalbard and Jan Mayen'), ('PY', 'Paraguay'), ('IQ', 'Iraq'), ('PA', 'Panama'), ('PF', 'French Polynesia'), ('PG', 'Papua New Guinea'), ('PE', 'Peru'), ('PK', 'Pakistan'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PM', 'Saint Pierre and Miquelon'), ('ZM', 'Zambia'), ('EH', 'Western Sahara'), ('EE', 'Estonia'), ('EG', 'Egypt'), ('ZA', 'South Africa'), ('EC', 'Ecuador'), ('IT', 'Italy'), ('VN', 'Vietnam'), ('SB', 'Solomon Islands'), ('ET', 'Ethiopia'), ('SO', 'Somalia'), ('ZW', 'Zimbabwe'), ('SA', 'Saudi Arabia'), ('ES', 'Spain'), ('ER', 'Eritrea'), ('ME', 'Montenegro'), ('MD', 'Moldova'), ('MG', 'Madagascar'), ('MF', 'Saint Martin'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('UZ', 'Uzbekistan'), ('MM', 'Myanmar'), ('ML', 'Mali'), ('MO', 'Macao'), ('MN', 'Mongolia'), ('MH', 'Marshall Islands'), ('MK', 'Macedonia'), ('MU', 'Mauritius'), ('MT', 'Malta'), ('MW', 'Malawi'), ('MV', 'Maldives'), ('MQ', 'Martinique'), ('MP', 'Northern Mariana Islands'), ('MS', 'Montserrat'), ('MR', 'Mauritania'), ('IM', 'Isle of Man'), ('UG', 'Uganda'), ('TZ', 'Tanzania'), ('MY', 'Malaysia'), ('MX', 'Mexico'), ('IL', 'Israel'), ('FR', 'France'), ('IO', 'British Indian Ocean Territory'), ('SH', 'Saint Helena'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands'), ('FM', 'Micronesia'), ('FO', 'Faroe Islands'), ('NI', 'Nicaragua'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NA', 'Namibia'), ('VU', 'Vanuatu'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NZ', 'New Zealand'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NU', 'Niue'), ('CK', 'Cook Islands'), ('XK', 'Kosovo'), ('CI', 'Ivory Coast'), ('CH', 'Switzerland'), ('CO', 'Colombia'), ('CN', 'China'), ('CM', 'Cameroon'), ('CL', 'Chile'), ('CC', 'Cocos Islands'), ('CA', 'Canada'), ('CG', 'Republic of the Congo'), ('CF', 'Central African Republic'), ('CD', 'Democratic Republic of the Congo'), ('CZ', 'Czech Republic'), ('CY', 'Cyprus'), ('CX', 'Christmas Island'), ('CR', 'Costa Rica'), ('CW', 'Curacao'), ('CV', 'Cape Verde'), ('CU', 'Cuba'), ('SZ', 'Swaziland'), ('SY', 'Syria'), ('SX', 'Sint Maarten'), ('KG', 'Kyrgyzstan'), ('KE', 'Kenya'), ('SS', 'South Sudan'), ('SR', 'Suriname'), ('KI', 'Kiribati'), ('KH', 'Cambodia'), ('KN', 'Saint Kitts and Nevis'), ('KM', 'Comoros'), ('ST', 'Sao Tome and Principe'), ('SK', 'Slovakia'), ('KR', 'South Korea'), ('SI', 'Slovenia'), ('KP', 'North Korea'), ('KW', 'Kuwait'), ('SN', 'Senegal'), ('SM', 'San Marino'), ('SL', 'Sierra Leone'), ('SC', 'Seychelles'), ('KZ', 'Kazakhstan'), ('KY', 'Cayman Islands'), ('SG', 'Singapore'), ('SE', 'Sweden'), ('SD', 'Sudan'), ('DO', 'Dominican Republic'), ('DM', 'Dominica'), ('DJ', 'Djibouti'), ('DK', 'Denmark'), ('VG', 'British Virgin Islands'), ('DE', 'Germany'), ('YE', 'Yemen'), ('DZ', 'Algeria'), ('US', 'United States'), ('UY', 'Uruguay'), ('YT', 'Mayotte'), ('UM', 'United States Minor Outlying Islands'), ('LB', 'Lebanon'), ('LC', 'Saint Lucia'), ('LA', 'Laos'), ('TV', 'Tuvalu'), ('TW', 'Taiwan'), ('TT', 'Trinidad and Tobago'), ('TR', 'Turkey'), ('LK', 'Sri Lanka'), ('LI', 'Liechtenstein'), ('LV', 'Latvia'), ('TO', 'Tonga'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LR', 'Liberia'), ('LS', 'Lesotho'), ('TH', 'Thailand'), ('TF', 'French Southern Territories'), ('TG', 'Togo'), ('TD', 'Chad'), ('TC', 'Turks and Caicos Islands'), ('LY', 'Libya'), ('VA', 'Vatican'), ('VC', 'Saint Vincent and the Grenadines'), ('AE', 'United Arab Emirates'), ('AD', 'Andorra'), ('AG', 'Antigua and Barbuda'), ('AF', 'Afghanistan'), ('AI', 'Anguilla'), ('VI', 'U.S. Virgin Islands'), ('IS', 'Iceland'), ('IR', 'Iran'), ('AM', 'Armenia'), ('AL', 'Albania'), ('AO', 'Angola'), ('AQ', 'Antarctica'), ('AS', 'American Samoa'), ('AR', 'Argentina'), ('AU', 'Australia'), ('AT', 'Austria'), ('AW', 'Aruba'), ('IN', 'India'), ('AX', 'Aland Islands'), ('AZ', 'Azerbaijan'), ('IE', 'Ireland'), ('ID', 'Indonesia'), ('UA', 'Ukraine'), ('QA', 'Qatar'), ('MZ', 'Mozambique')], default='US')),
                ('language', alinaverenaapi.modelfields.LanguageField(choices=[('Abkhaz', 'аҧсуа — Abkhaz'), ('Afar', 'Afaraf — Afar'), ('Afrikaans', 'Afrikaans — Afrikaans'), ('Akan', 'Akan — Akan'), ('Albanian', 'Shqip — Albanian'), ('Amharic', 'አማርኛ — Amharic'), ('Arabic', 'العربية — Arabic'), ('Aragonese', 'Aragonés — Aragonese'), ('Armenian', 'Հայերեն — Armenian'), ('Assamese', 'অসমীয়া — Assamese'), ('Avaric', 'авар мацӀ, магӀарул мацӀ — Avaric'), ('Avestan', 'avesta — Avestan'), ('Aymara', 'aymar aru — Aymara'), ('Azerbaijani', 'azərbaycan dili — Azerbaijani'), ('Bambara', 'bamanankan — Bambara'), ('Bashkir', 'башҡорт теле — Bashkir'), ('Basque', 'euskara, euskera — Basque'), ('Belarusian', 'Беларуская — Belarusian'), ('Bengali', 'বাংলা — Bengali'), ('Bihari', 'भोजपुरी — Bihari'), ('Bislama', 'Bislama — Bislama'), ('Bosnian', 'bosanski jezik — Bosnian'), ('Breton', 'brezhoneg — Breton'), ('Bulgarian', 'български език — Bulgarian'), ('Burmese', 'ဗမာစာ — Burmese'), ('Catalan; Valencian', 'Català — Catalan; Valencian'), ('Chamorro', 'Chamoru — Chamorro'), ('Chechen', 'нохчийн мотт — Chechen'), ('Chichewa; Chewa; Nyanja', 'chiCheŵa, chinyanja — Chichewa; Chewa; Nyanja'), ('Chinese', '中文 (Zhōngwén), 汉语, 漢語 — Chinese'), ('Chuvash', 'чӑваш чӗлхи — Chuvash'), ('Cornish', 'Kernewek — Cornish'), ('Corsican', 'corsu, lingua corsa — Corsican'), ('Cree', 'ᓀᐦᐃᔭᐍᐏᐣ — Cree'), ('Croatian', 'hrvatski — Croatian'), ('Czech', 'česky, čeština — Czech'), ('Danish', 'dansk — Danish'), ('Divehi; Dhivehi; Maldivian;', 'ދިވެހި — Divehi; Dhivehi; Maldivian;'), ('Dutch', 'Nederlands, Vlaams — Dutch'), ('English', 'English — English'), ('Esperanto', 'Esperanto — Esperanto'), ('Estonian', 'eesti, eesti keel — Estonian'), ('Ewe', 'Eʋegbe — Ewe'), ('Faroese', 'føroyskt — Faroese'), ('Fijian', 'vosa Vakaviti — Fijian'), ('Finnish', 'suomi, suomen kieli — Finnish'), ('French', 'français, langue française — French'), ('Fula; Fulah; Pulaar; Pular', 'Fulfulde, Pulaar, Pular — Fula; Fulah; Pulaar; Pular'), ('Galician', 'Galego — Galician'), ('Georgian', 'ქართული — Georgian'), ('German', 'Deutsch — German'), ('Greek, Modern', 'Ελληνικά — Greek, Modern'), ('Guaraní', 'Avañeẽ — Guaraní'), ('Gujarati', 'ગુજરાતી — Gujarati'), ('Haitian; Haitian Creole', 'Kreyòl ayisyen — Haitian; Haitian Creole'), ('Hausa', 'Hausa, هَوُسَ — Hausa'), ('Hebrew (modern)', 'עברית — Hebrew (modern)'), ('Herero', 'Otjiherero — Herero'), ('Hindi', 'हिन्दी, हिंदी — Hindi'), ('Hiri Motu', 'Hiri Motu — Hiri Motu'), ('Hungarian', 'Magyar — Hungarian'), ('Interlingua', 'Interlingua — Interlingua'), ('Indonesian', 'Bahasa Indonesia — Indonesian'), ('Interlingue', 'Originally called Occidental; then Interlingue after WWII — Interlingue'), ('Irish', 'Gaeilge — Irish'), ('Igbo', 'Asụsụ Igbo — Igbo'), ('Inupiaq', 'Iñupiaq, Iñupiatun — Inupiaq'), ('Ido', 'Ido — Ido'), ('Icelandic', 'Íslenska — Icelandic'), ('Italian', 'Italiano — Italian'), ('Inuktitut', 'ᐃᓄᒃᑎᑐᑦ — Inuktitut'), ('Japanese', '日本語 (にほんご／にっぽんご) — Japanese'), ('Javanese', 'basa Jawa — Javanese'), ('Kalaallisut, Greenlandic', 'kalaallisut, kalaallit oqaasii — Kalaallisut, Greenlandic'), ('Kannada', 'ಕನ್ನಡ — Kannada'), ('Kanuri', 'Kanuri — Kanuri'), ('Kashmiri', 'कश्मीरी, كشميري\u200e — Kashmiri'), ('Kazakh', 'Қазақ тілі — Kazakh'), ('Khmer', 'ភាសាខ្មែរ — Khmer'), ('Kikuyu, Gikuyu', 'Gĩkũyũ — Kikuyu, Gikuyu'), ('Kinyarwanda', 'Ikinyarwanda — Kinyarwanda'), ('Kirghiz, Kyrgyz', 'кыргыз тили — Kirghiz, Kyrgyz'), ('Komi', 'коми кыв — Komi'), ('Kongo', 'KiKongo — Kongo'), ('Korean', '한국어 (韓國語), 조선말 (朝鮮語) — Korean'), ('Kurdish', 'Kurdî, كوردی\u200e — Kurdish'), ('Kwanyama, Kuanyama', 'Kuanyama — Kwanyama, Kuanyama'), ('Latin', 'latine, lingua latina — Latin'), ('Luxembourgish, Letzeburgesch', 'Lëtzebuergesch — Luxembourgish, Letzeburgesch'), ('Luganda', 'Luganda — Luganda'), ('Limburgish, Limburgan, Limburger', 'Limburgs — Limburgish, Limburgan, Limburger'), ('Lingala', 'Lingála — Lingala'), ('Lao', 'ພາສາລາວ — Lao'), ('Lithuanian', 'lietuvių kalba — Lithuanian'), ('Luba-Katanga', ' — Luba-Katanga'), ('Latvian', 'latviešu valoda — Latvian'), ('Manx', 'Gaelg, Gailck — Manx'), ('Macedonian', 'македонски јазик — Macedonian'), ('Malagasy', 'Malagasy fiteny — Malagasy'), ('Malay', 'bahasa Melayu, بهاس ملايو\u200e — Malay'), ('Malayalam', 'മലയാളം — Malayalam'), ('Maltese', 'Malti — Maltese'), ('Māori', 'te reo Māori — Māori'), ('Marathi (Marāṭhī)', 'मराठी — Marathi (Marāṭhī)'), ('Marshallese', 'Kajin M̧ajeļ — Marshallese'), ('Mongolian', 'монгол — Mongolian'), ('Nauru', 'Ekakairũ Naoero — Nauru'), ('Navajo, Navaho', 'Diné bizaad, Dinékʼehǰí — Navajo, Navaho'), ('Norwegian Bokmål', 'Norsk bokmål — Norwegian Bokmål'), ('North Ndebele', 'isiNdebele — North Ndebele'), ('Nepali', 'नेपाली — Nepali'), ('Ndonga', 'Owambo — Ndonga'), ('Norwegian Nynorsk', 'Norsk nynorsk — Norwegian Nynorsk'), ('Norwegian', 'Norsk — Norwegian'), ('Nuosu', 'ꆈꌠ꒿ Nuosuhxop — Nuosu'), ('South Ndebele', 'isiNdebele — South Ndebele'), ('Occitan', 'Occitan — Occitan'), ('Ojibwe, Ojibwa', 'ᐊᓂᔑᓈᐯᒧᐎᓐ — Ojibwe, Ojibwa'), ('Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic', 'ѩзыкъ словѣньскъ — Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'), ('Oromo', 'Afaan Oromoo — Oromo'), ('Oriya', 'ଓଡ଼ିଆ — Oriya'), ('Ossetian, Ossetic', 'ирон æвзаг — Ossetian, Ossetic'), ('Panjabi, Punjabi', 'ਪੰਜਾਬੀ, پنجابی\u200e — Panjabi, Punjabi'), ('Pāli', 'पाऴि — Pāli'), ('Persian', 'فارسی — Persian'), ('Polish', 'polski — Polish'), ('Pashto, Pushto', 'پښتو — Pashto, Pushto'), ('Portuguese', 'Português — Portuguese'), ('Quechua', 'Runa Simi, Kichwa — Quechua'), ('Romansh', 'rumantsch grischun — Romansh'), ('Kirundi', 'kiRundi — Kirundi'), ('Romanian, Moldavian, Moldovan', 'română — Romanian, Moldavian, Moldovan'), ('Russian', 'русский язык — Russian'), ('Sanskrit (Saṁskṛta)', 'संस्कृतम् — Sanskrit (Saṁskṛta)'), ('Sardinian', 'sardu — Sardinian'), ('Sindhi', 'सिन्धी, سنڌي، سندھی\u200e — Sindhi'), ('Northern Sami', 'Davvisámegiella — Northern Sami'), ('Samoan', 'gagana faa Samoa — Samoan'), ('Sango', 'yângâ tî sängö — Sango'), ('Serbian', 'српски језик — Serbian'), ('Scottish Gaelic; Gaelic', 'Gàidhlig — Scottish Gaelic; Gaelic'), ('Shona', 'chiShona — Shona'), ('Sinhala, Sinhalese', 'සිංහල — Sinhala, Sinhalese'), ('Slovak', 'slovenčina — Slovak'), ('Slovene', 'slovenščina — Slovene'), ('Somali', 'Soomaaliga, af Soomaali — Somali'), ('Southern Sotho', 'Sesotho — Southern Sotho'), ('Spanish; Castilian', 'español, castellano — Spanish; Castilian'), ('Sundanese', 'Basa Sunda — Sundanese'), ('Swahili', 'Kiswahili — Swahili'), ('Swati', 'SiSwati — Swati'), ('Swedish', 'svenska — Swedish'), ('Tamil', 'தமிழ் — Tamil'), ('Telugu', 'తెలుగు — Telugu'), ('Tajik', 'тоҷикӣ, toğikī, تاجیکی\u200e — Tajik'), ('Thai', 'ไทย — Thai'), ('Tigrinya', 'ትግርኛ — Tigrinya'), ('Tibetan Standard, Tibetan, Central', 'བོད་ཡིག — Tibetan Standard, Tibetan, Central'), ('Turkmen', 'Türkmen, Түркмен — Turkmen'), ('Tagalog', 'Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔ — Tagalog'), ('Tswana', 'Setswana — Tswana'), ('Tonga (Tonga Islands)', 'faka Tonga — Tonga (Tonga Islands)'), ('Turkish', 'Türkçe — Turkish'), ('Tsonga', 'Xitsonga — Tsonga'), ('Tatar', 'татарча, tatarça, تاتارچا\u200e — Tatar'), ('Twi', 'Twi — Twi'), ('Tahitian', 'Reo Tahiti — Tahitian'), ('Uighur, Uyghur', 'Uyƣurqə, ئۇيغۇرچە\u200e — Uighur, Uyghur'), ('Ukrainian', 'українська — Ukrainian'), ('Urdu', 'اردو — Urdu'), ('Uzbek', 'zbek, Ўзбек, أۇزبېك\u200e — Uzbek'), ('Venda', 'Tshivenḓa — Venda'), ('Vietnamese', 'Tiếng Việt — Vietnamese'), ('Volapük', 'Volapük — Volapük'), ('Walloon', 'Walon — Walloon'), ('Welsh', 'Cymraeg — Welsh'), ('Wolof', 'Wollof — Wolof'), ('Western Frisian', 'Frysk — Western Frisian'), ('Xhosa', 'isiXhosa — Xhosa'), ('Yiddish', 'ייִדיש — Yiddish'), ('Yoruba', 'Yorùbá — Yoruba'), ('Zhuang, Chuang', 'Saɯ cueŋƅ, Saw cuengh — Zhuang, Chuang')], default='en')),
                ('currency', alinaverenaapi.modelfields.CurrencyField(choices=[('USD', '$ US Dollar'), ('CAD', 'CA$ Canadian Dollar'), ('EUR', '€ Euro'), ('AED', 'AED United Arab Emirates Dirham'), ('AFN', 'Af Afghan Afghani'), ('ALL', 'ALL Albanian Lek'), ('AMD', 'AMD Armenian Dram'), ('ARS', 'AR$ Argentine Peso'), ('AUD', 'AU$ Australian Dollar'), ('AZN', 'man. Azerbaijani Manat'), ('BAM', 'KM Bosnia-Herzegovina Convertible Mark'), ('BDT', 'Tk Bangladeshi Taka'), ('BGN', 'BGN Bulgarian Lev'), ('BHD', 'BD Bahraini Dinar'), ('BIF', 'FBu Burundian Franc'), ('BND', 'BN$ Brunei Dollar'), ('BOB', 'Bs Bolivian Boliviano'), ('BRL', 'R$ Brazilian Real'), ('BWP', 'BWP Botswanan Pula'), ('BYN', 'Br Belarusian Ruble'), ('BZD', 'BZ$ Belize Dollar'), ('CDF', 'CDF Congolese Franc'), ('CHF', 'CHF Swiss Franc'), ('CLP', 'CL$ Chilean Peso'), ('CNY', 'CN¥ Chinese Yuan'), ('COP', 'CO$ Colombian Peso'), ('CRC', '₡ Costa Rican Colón'), ('CVE', 'CV$ Cape Verdean Escudo'), ('CZK', 'Kč Czech Republic Koruna'), ('DJF', 'Fdj Djiboutian Franc'), ('DKK', 'Dkr Danish Krone'), ('DOP', 'RD$ Dominican Peso'), ('DZD', 'DA Algerian Dinar'), ('EEK', 'Ekr Estonian Kroon'), ('EGP', 'EGP Egyptian Pound'), ('ERN', 'Nfk Eritrean Nakfa'), ('ETB', 'Br Ethiopian Birr'), ('GBP', '£ British Pound Sterling'), ('GEL', 'GEL Georgian Lari'), ('GHS', 'GH₵ Ghanaian Cedi'), ('GNF', 'FG Guinean Franc'), ('GTQ', 'GTQ Guatemalan Quetzal'), ('HKD', 'HK$ Hong Kong Dollar'), ('HNL', 'HNL Honduran Lempira'), ('HRK', 'kn Croatian Kuna'), ('HUF', 'Ft Hungarian Forint'), ('IDR', 'Rp Indonesian Rupiah'), ('ILS', '₪ Israeli New Sheqel'), ('INR', 'Rs Indian Rupee'), ('IQD', 'IQD Iraqi Dinar'), ('IRR', 'IRR Iranian Rial'), ('ISK', 'Ikr Icelandic Króna'), ('JMD', 'J$ Jamaican Dollar'), ('JOD', 'JD Jordanian Dinar'), ('JPY', '¥ Japanese Yen'), ('KES', 'Ksh Kenyan Shilling'), ('KHR', 'KHR Cambodian Riel'), ('KMF', 'CF Comorian Franc'), ('KRW', '₩ South Korean Won'), ('KWD', 'KD Kuwaiti Dinar'), ('KZT', 'KZT Kazakhstani Tenge'), ('LBP', 'L.L. Lebanese Pound'), ('LKR', 'SLRs Sri Lankan Rupee'), ('LTL', 'Lt Lithuanian Litas'), ('LVL', 'Ls Latvian Lats'), ('LYD', 'LD Libyan Dinar'), ('MAD', 'MAD Moroccan Dirham'), ('MDL', 'MDL Moldovan Leu'), ('MGA', 'MGA Malagasy Ariary'), ('MKD', 'MKD Macedonian Denar'), ('MMK', 'MMK Myanma Kyat'), ('MOP', 'MOP$ Macanese Pataca'), ('MUR', 'MURs Mauritian Rupee'), ('MXN', 'MX$ Mexican Peso'), ('MYR', 'RM Malaysian Ringgit'), ('MZN', 'MTn Mozambican Metical'), ('NAD', 'N$ Namibian Dollar'), ('NGN', '₦ Nigerian Naira'), ('NIO', 'C$ Nicaraguan Córdoba'), ('NOK', 'Nkr Norwegian Krone'), ('NPR', 'NPRs Nepalese Rupee'), ('NZD', 'NZ$ New Zealand Dollar'), ('OMR', 'OMR Omani Rial'), ('PAB', 'B/. Panamanian Balboa'), ('PEN', 'S/. Peruvian Nuevo Sol'), ('PHP', '₱ Philippine Peso'), ('PKR', 'PKRs Pakistani Rupee'), ('PLN', 'zł Polish Zloty'), ('PYG', '₲ Paraguayan Guarani'), ('QAR', 'QR Qatari Rial'), ('RON', 'RON Romanian Leu'), ('RSD', 'din. Serbian Dinar'), ('RUB', 'RUB Russian Ruble'), ('RWF', 'RWF Rwandan Franc'), ('SAR', 'SR Saudi Riyal'), ('SDG', 'SDG Sudanese Pound'), ('SEK', 'Skr Swedish Krona'), ('SGD', 'S$ Singapore Dollar'), ('SOS', 'Ssh Somali Shilling'), ('SYP', 'SY£ Syrian Pound'), ('THB', '฿ Thai Baht'), ('TND', 'DT Tunisian Dinar'), ('TOP', 'T$ Tongan Paʻanga'), ('TRY', 'TL Turkish Lira'), ('TTD', 'TT$ Trinidad and Tobago Dollar'), ('TWD', 'NT$ New Taiwan Dollar'), ('TZS', 'TSh Tanzanian Shilling'), ('UAH', '₴ Ukrainian Hryvnia'), ('UGX', 'USh Ugandan Shilling'), ('UYU', '$U Uruguayan Peso'), ('UZS', 'UZS Uzbekistan Som'), ('VEF', 'Bs.F. Venezuelan Bolívar'), ('VND', '₫ Vietnamese Dong'), ('XAF', 'FCFA CFA Franc BEAC'), ('XOF', 'CFA CFA Franc BCEAO'), ('YER', 'YR Yemeni Rial'), ('ZAR', 'R South African Rand'), ('ZMK', 'ZK Zambian Kwacha'), ('ZWL', 'ZWL$ Zimbabwean Dollar')], default='USD')),
                ('last_visit', models.DateTimeField(blank=True, null=True)),
                ('user_ipaddress', models.GenericIPAddressField(default='127.0.0.1')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnonymousClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ipaddress', models.GenericIPAddressField(default='127.0.0.1')),
            ],
        ),
        migrations.CreateModel(
            name='FrontendLoadingBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_desktop', models.ImageField(upload_to='loading-images/%Y/%M/%D/', verbose_name='Loading background image for desktop')),
                ('image_phone', models.ImageField(upload_to='loading-images/%Y/%M/%D/', verbose_name='Loading background image for phone')),
                ('dark_image', models.BooleanField(verbose_name='Is picture dark?')),
                ('active', models.BooleanField(default=True, verbose_name='Active image in the website?')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('privilege', models.BooleanField(default=False)),
                ('quantities', models.JSONField(verbose_name='Quantity of each wearable size')),
                ('price', models.DecimalField(decimal_places=2, max_digits=16, verbose_name='Price')),
                ('date_added', models.DateTimeField(auto_now=True, null=True, verbose_name='Time Added')),
                ('product_color', models.CharField(default='#000000', max_length=128, verbose_name='Product color')),
                ('is_product_color_dark', models.BooleanField(default=False, verbose_name='is product color dark')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=128, unique=True, verbose_name='Category')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=150, verbose_name='first name')),
                ('lastName', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=79.99, max_digits=16, null=True, verbose_name='Price')),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('purchaseInfo', models.JSONField(verbose_name='Purchase info')),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alinaverenaapi.product')),
                ('purchase_anon_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='alinaverenaapi.anonymousclient')),
                ('purchase_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belonging_feature', models.JSONField(verbose_name='Belonging feature')),
                ('product_image', models.ImageField(upload_to='', verbose_name='Product image')),
                ('product_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alinaverenaapi.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Collection name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alinaverenaapi.productcategory', verbose_name='Collection Category')),
                ('products_in_article', models.ManyToManyField(blank=True, to='alinaverenaapi.product', verbose_name='Heels in article')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alinaverenaapi.productcategory'),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image_desktop', models.ImageField(upload_to='article-images/%Y/%M/%D/', verbose_name='Article image for desktop')),
                ('image_responsive', models.ImageField(upload_to='article-images-responsive/%Y/%M/%D/', verbose_name='Article image responsive')),
                ('image_dark_mode', models.BooleanField(default=False, verbose_name='Image dark mode')),
                ('active', models.BooleanField(default=False, verbose_name='Visible active')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='alinaverenaapi.productcollection', verbose_name='Product Collection')),
                ('favorite', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL, verbose_name='Clients favorite articles.')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('features', models.JSONField(verbose_name='Features')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='alinaverenaapi.product')),
            ],
            options={
                'verbose_name': 'product Translation',
                'db_table': 'alinaverenaapi_product_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArticleTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=64, unique=True, verbose_name='Article title')),
                ('description', models.TextField(verbose_name='Article description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_text', to='alinaverenaapi.article')),
            ],
            options={
                'verbose_name': 'article Translation',
                'db_table': 'alinaverenaapi_article_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
